{
  "name": "Recipe Bot-action",
  "type": "action",
  "counts": {
    "actions": 6,
    "intents": 3,
    "entities": 16,
    "data_types": 0,
    "collections": 0,
    "global_variables": 18
  },
  "status": "Available",
  "language": "en",
  "skill_id": "eaa8c0c0-5e36-4522-8530-e84b7928341a",
  "workspace": {
    "actions": [
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_9107",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_357",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Let's upload an image!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "user_defined": {
                    "user_defined_type": "image_upload"
                  },
                  "response_type": "user_defined",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_357",
            "next_step": "step_916"
          },
          {
            "step": "step_916",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sorry, I didn't receive the image. Let's try again!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "time": 2000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_357"
                }
              ]
            },
            "variable": "step_916",
            "condition": {
              "matches": [
                {
                  "variable": "step_357"
                },
                {
                  "scalar": "No",
                  "options": {
                    "ignore_case": true
                  }
                }
              ]
            },
            "next_step": "step_856"
          },
          {
            "step": "step_856",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Great! Let me try to recognize what food is in your picture..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_856",
            "condition": {
              "matches": [
                {
                  "variable": "step_357"
                },
                {
                  "scalar": "Yes"
                }
              ]
            },
            "next_step": "step_513"
          },
          {
            "step": "step_513",
            "title": "Search for recipes",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I found the following food items:\n\n<? "
                          },
                          {
                            "variable": "step_856"
                          },
                          {
                            "scalar": " .join(', ') ?>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Let's find some recipes that include those ingredients..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "time": 2000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_856}.toJson().join(',+')"
                  },
                  "skill_variable": "spoontacular_food_items"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/recipes/findByIngredients",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "b992255fc8048f0e89fd28405ff9bd9eb453b5c189325e5a33eb1262ae8e97ff",
                  "catalog_item_id": "b9e3dfc4-e3c2-4530-8686-2f61bd306d76"
                },
                "request_mapping": {
                  "query": [
                    {
                      "value": {
                        "skill_variable": "spoontacular_food_items"
                      },
                      "parameter": "ingredients"
                    }
                  ]
                },
                "result_variable": "step_513_result_1"
              }
            },
            "variable": "step_513",
            "next_step": "step_684"
          },
          {
            "step": "step_684",
            "title": "Show results summary",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I found "
                          },
                          {
                            "skill_variable": "NUM_RECIPES"
                          },
                          {
                            "scalar": " recipes. Here is the first!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_513_result_1.body}.length"
                  },
                  "skill_variable": "NUM_RECIPES"
                },
                {
                  "value": {
                    "scalar": 0
                  },
                  "skill_variable": "RECIPE_INDEX"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_684",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_513_result_1",
                    "variable_path": "body"
                  }
                },
                {
                  "expression": "${step_513_result_1.body}.length > 0"
                }
              ]
            },
            "next_step": "step_740"
          },
          {
            "step": "step_740",
            "title": "Show recipe details",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "RECIPE_TITLE"
                          },
                          {
                            "scalar": " ("
                          },
                          {
                            "skill_variable": "READABLE_RECIPE_INDEX"
                          },
                          {
                            "scalar": " of "
                          },
                          {
                            "skill_variable": "NUM_RECIPES"
                          },
                          {
                            "scalar": ")"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "title": "",
                  "source": "${IMAGE_URL}",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Used Ingredients:** "
                          },
                          {
                            "skill_variable": "INGREDIENTS_LIST"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Additional Ingredients:** "
                          },
                          {
                            "skill_variable": "MISSED_INGREDIENTS"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Unused Ingredients:** "
                          },
                          {
                            "skill_variable": "UNUSED_INGREDIENTS"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "previous",
                      "value": {
                        "input": {
                          "text": "previous"
                        }
                      }
                    },
                    {
                      "label": "next",
                      "value": {
                        "input": {
                          "text": "next"
                        }
                      }
                    },
                    {
                      "label": "new search",
                      "value": {
                        "input": {
                          "text": "new search"
                        }
                      }
                    },
                    {
                      "label": "done",
                      "value": {
                        "input": {
                          "text": "done"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "$step_513_result_1.body[$RECIPE_INDEX].title"
                  },
                  "skill_variable": "RECIPE_TITLE"
                },
                {
                  "value": {
                    "expression": "$step_513_result_1.body[$RECIPE_INDEX].image"
                  },
                  "skill_variable": "IMAGE_URL"
                },
                {
                  "value": {
                    "expression": "$step_513_result_1.body[$RECIPE_INDEX].usedIngredients.![name]"
                  },
                  "skill_variable": "INGREDIENTS_LIST"
                },
                {
                  "value": {
                    "expression": "$step_513_result_1.body[$RECIPE_INDEX].missedIngredients.![name]"
                  },
                  "skill_variable": "MISSED_INGREDIENTS"
                },
                {
                  "value": {
                    "expression": "$step_513_result_1.body[$RECIPE_INDEX].unusedIngredients.![name]"
                  },
                  "skill_variable": "UNUSED_INGREDIENTS"
                },
                {
                  "value": {
                    "expression": "${RECIPE_INDEX} + 1"
                  },
                  "skill_variable": "READABLE_RECIPE_INDEX"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_30053",
              "max_tries": 3,
              "allow_topic_switch": false,
              "response_collection_behavior": "optionally_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_740",
            "next_step": "step_126"
          },
          {
            "step": "step_126",
            "title": "Show previous recipe",
            "output": {
              "generic": [
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "(${RECIPE_INDEX} + ${NUM_RECIPES} - 1) % ${NUM_RECIPES}"
                  },
                  "skill_variable": "RECIPE_INDEX"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_740"
                }
              ]
            },
            "variable": "step_126",
            "condition": {
              "eq": [
                {
                  "variable": "step_740"
                },
                {
                  "value": "previous",
                  "from_entity": "entity_30053"
                }
              ]
            },
            "next_step": "step_845"
          },
          {
            "step": "step_845",
            "title": "Show next recipe",
            "output": {
              "generic": [
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "(${RECIPE_INDEX} + 1) % ${NUM_RECIPES}"
                  },
                  "skill_variable": "RECIPE_INDEX"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_740"
                }
              ]
            },
            "variable": "step_845",
            "condition": {
              "eq": [
                {
                  "variable": "step_740"
                },
                {
                  "value": "next",
                  "from_entity": "entity_30053"
                }
              ]
            },
            "next_step": "step_136"
          },
          {
            "step": "step_136",
            "title": "Start new search",
            "output": {
              "generic": [
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_357"
                },
                {
                  "variable": "step_916"
                },
                {
                  "variable": "step_856"
                },
                {
                  "variable": "step_513"
                },
                {
                  "variable": "step_684"
                },
                {
                  "variable": "step_740"
                }
              ]
            },
            "variable": "step_136",
            "condition": {
              "eq": [
                {
                  "variable": "step_740"
                },
                {
                  "value": "new search",
                  "from_entity": "entity_30053"
                }
              ]
            },
            "next_step": "step_840"
          },
          {
            "step": "step_840",
            "title": "Start new search",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Hope you are able to save this food. Have a good day!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_840",
            "condition": {
              "eq": [
                {
                  "variable": "step_740"
                },
                {
                  "value": "done",
                  "from_entity": "entity_30053"
                }
              ]
            }
          }
        ],
        "title": "I want to get recipes from that picture of food items",
        "action": "action_9107",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_9107_intent_39922"
        },
        "variables": [
          {
            "title": "Show previous recipe",
            "variable": "step_126",
            "data_type": "any"
          },
          {
            "title": "Start new search",
            "variable": "step_136",
            "data_type": "any"
          },
          {
            "title": "Let's upload an image!",
            "variable": "step_357",
            "data_type": "any"
          },
          {
            "title": "I found the following food items: <? {variable} .join(', ') ?>",
            "variable": "step_513",
            "data_type": "any"
          },
          {
            "variable": "step_513_result_1",
            "data_type": "any"
          },
          {
            "title": "Show results summary",
            "variable": "step_684",
            "data_type": "any"
          },
          {
            "title": "Show recipe details",
            "variable": "step_740",
            "data_type": "any"
          },
          {
            "title": "Start new search",
            "variable": "step_840",
            "data_type": "any"
          },
          {
            "title": "Show next recipe",
            "variable": "step_845",
            "data_type": "any"
          },
          {
            "title": "Great! Let me try to recognize what food is in your picture...",
            "variable": "step_856",
            "data_type": "any"
          },
          {
            "title": "Sorry, I didn't receive the image. Let's try again!",
            "variable": "step_916",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_9107-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_357",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Let's start by sending the list of your food items!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_357",
            "next_step": "step_856"
          },
          {
            "step": "step_856",
            "title": "Search for recipes",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Great! Let me look up recipes with "
                          },
                          {
                            "skill_variable": "foodItems"
                          },
                          {
                            "scalar": "."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "time": 3000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_357"
                  },
                  "skill_variable": "foodItems"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/recipes/findByIngredients",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "b992255fc8048f0e89fd28405ff9bd9eb453b5c189325e5a33eb1262ae8e97ff",
                  "catalog_item_id": "b9e3dfc4-e3c2-4530-8686-2f61bd306d76"
                },
                "request_mapping": {
                  "query": [
                    {
                      "value": {
                        "skill_variable": "foodItems"
                      },
                      "parameter": "ingredients"
                    },
                    {
                      "value": {
                        "scalar": 10
                      },
                      "parameter": "number"
                    }
                  ]
                },
                "result_variable": "step_856_result_1"
              }
            },
            "variable": "step_856",
            "next_step": "step_513"
          },
          {
            "step": "step_513",
            "title": "Show result summary",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I found "
                          },
                          {
                            "skill_variable": "numRecipes"
                          },
                          {
                            "scalar": " recipes. Here is the first!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_856_result_1.body}.length"
                  },
                  "skill_variable": "numRecipes"
                },
                {
                  "value": {
                    "scalar": 0
                  },
                  "skill_variable": "recipeIndex"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_513",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_856_result_1",
                    "variable_path": "body"
                  }
                },
                {
                  "expression": "${step_856_result_1.body}.length > 0"
                }
              ]
            },
            "next_step": "step_829"
          },
          {
            "step": "step_829",
            "title": "Show recipe details",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**"
                          },
                          {
                            "skill_variable": "recipeTitle"
                          },
                          {
                            "scalar": "** ("
                          },
                          {
                            "skill_variable": "readableRecipeIndex"
                          },
                          {
                            "scalar": " of "
                          },
                          {
                            "skill_variable": "numRecipes"
                          },
                          {
                            "scalar": ")"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "title": "",
                  "source": "${recipeImgUrl}",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Used Ingredients:** "
                          },
                          {
                            "skill_variable": "usedIngredients"
                          },
                          {
                            "scalar": "\n\n**Additional Ingredients:** "
                          },
                          {
                            "skill_variable": "missedIngredients"
                          },
                          {
                            "scalar": "\n\n**Unused Ingredients:** "
                          },
                          {
                            "skill_variable": "unusedIngredients"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "previous",
                      "value": {
                        "input": {
                          "text": "previous"
                        }
                      }
                    },
                    {
                      "label": "next",
                      "value": {
                        "input": {
                          "text": "next"
                        }
                      }
                    },
                    {
                      "label": "new search",
                      "value": {
                        "input": {
                          "text": "new search"
                        }
                      }
                    },
                    {
                      "label": "done",
                      "value": {
                        "input": {
                          "text": "done"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "$step_856_result_1.body[$recipeIndex].title"
                  },
                  "skill_variable": "recipeTitle"
                },
                {
                  "value": {
                    "expression": "$step_856_result_1.body[$recipeIndex].image"
                  },
                  "skill_variable": "recipeImgUrl"
                },
                {
                  "value": {
                    "expression": "${recipeIndex} + 1"
                  },
                  "skill_variable": "readableRecipeIndex"
                },
                {
                  "value": {
                    "expression": "$step_856_result_1.body[$recipeIndex].usedIngredients.![name]"
                  },
                  "skill_variable": "usedIngredients"
                },
                {
                  "value": {
                    "expression": "$step_856_result_1.body[$recipeIndex].missedIngredients.![name]"
                  },
                  "skill_variable": "missedIngredients"
                },
                {
                  "value": {
                    "expression": "$step_856_result_1.body[$recipeIndex].unusedIngredients.![name]"
                  },
                  "skill_variable": "unusedIngredients"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_26237",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_829",
            "next_step": "step_281"
          },
          {
            "step": "step_281",
            "title": "Show previous recipe",
            "output": {
              "generic": [
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "(${recipeIndex} + ${numRecipes} - 1) % ${numRecipes}"
                  },
                  "skill_variable": "recipeIndex"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_829"
                }
              ]
            },
            "variable": "step_281",
            "condition": {
              "eq": [
                {
                  "variable": "step_829"
                },
                {
                  "value": "previous",
                  "from_entity": "entity_26237"
                }
              ]
            },
            "next_step": "step_810"
          },
          {
            "step": "step_810",
            "title": "Show next recipe",
            "output": {
              "generic": [
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "(${recipeIndex} + 1) % ${numRecipes}"
                  },
                  "skill_variable": "recipeIndex"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_829"
                }
              ]
            },
            "variable": "step_810",
            "condition": {
              "eq": [
                {
                  "variable": "step_829"
                },
                {
                  "value": "next",
                  "from_entity": "entity_26237"
                }
              ]
            },
            "next_step": "step_874"
          },
          {
            "step": "step_874",
            "title": "Start new Search",
            "output": {
              "generic": [
                {
                  "time": 1000,
                  "typing": true,
                  "response_type": "pause"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_357"
                },
                {
                  "variable": "step_856"
                },
                {
                  "variable": "step_513"
                },
                {
                  "variable": "step_829"
                },
                {
                  "variable": "step_281"
                },
                {
                  "variable": "step_810"
                }
              ]
            },
            "variable": "step_874",
            "condition": {
              "eq": [
                {
                  "variable": "step_829"
                },
                {
                  "value": "new search",
                  "from_entity": "entity_26237"
                }
              ]
            },
            "next_step": "step_656"
          },
          {
            "step": "step_656",
            "title": "Done",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Hope you are able to save this food. Have a good day!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_656",
            "condition": {
              "eq": [
                {
                  "variable": "step_829"
                },
                {
                  "value": "done",
                  "from_entity": "entity_26237"
                }
              ]
            }
          }
        ],
        "title": "I want to get recipes from that list of food items",
        "action": "action_9107-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_9107_intent_39922-2"
        },
        "variables": [
          {
            "title": "",
            "variable": "step_281",
            "data_type": "any"
          },
          {
            "title": "Let's start by sending the list of your food items!",
            "variable": "step_357",
            "data_type": "any"
          },
          {
            "title": "Show result summary",
            "variable": "step_513",
            "data_type": "any"
          },
          {
            "title": "Done",
            "variable": "step_656",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_810",
            "data_type": "any"
          },
          {
            "title": "Show recipe details",
            "variable": "step_829",
            "data_type": "any"
          },
          {
            "title": "Search for recipes",
            "variable": "step_856",
            "data_type": "any"
          },
          {
            "variable": "step_856_result_1",
            "data_type": "any"
          },
          {
            "title": "Start new Search",
            "variable": "step_874",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      }
    ],
    "intents": [
      {
        "intent": "action_9107_intent_39922",
        "examples": [
          {
            "text": "I want to get recipes from that picture of food items"
          },
          {
            "text": "Recipes from picture of food items"
          },
          {
            "text": "image of food items"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "I would like to speak to someone"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Agent help"
          }
        ],
        "description": "Please transfer me to an agent"
      },
      {
        "intent": "action_9107_intent_39922-2",
        "examples": [
          {
            "text": "Recipes from list of food items"
          },
          {
            "text": "I want to get recipes from that list of food items"
          }
        ]
      }
    ],
    "entities": [
      {
        "entity": "entity_30053",
        "values": [
          {
            "type": "synonyms",
            "value": "previous",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "next",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "new search",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "done",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-currency",
        "values": []
      },
      {
        "entity": "entity_19645",
        "values": [
          {
            "type": "synonyms",
            "value": "Checking account",
            "synonyms": [
              "Checking"
            ]
          },
          {
            "type": "synonyms",
            "value": "Savings account",
            "synonyms": [
              "Savings"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-yes-no",
        "values": []
      },
      {
        "entity": "entity_17250",
        "values": [
          {
            "type": "patterns",
            "value": "Regular_expression",
            "patterns": [
              "\"^(?:.*[a-z])(?:.*[A-Z])(?:.*\\d)(?:.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\""
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-number",
        "values": []
      },
      {
        "entity": "entity_1243",
        "values": [
          {
            "type": "synonyms",
            "value": "Savings account",
            "synonyms": [
              "Savings"
            ]
          },
          {
            "type": "synonyms",
            "value": "Checking account",
            "synonyms": [
              "Checking"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "entity_18549",
        "values": [
          {
            "type": "patterns",
            "value": "Email",
            "patterns": [
              "\\b(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\b"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_25899",
        "values": [
          {
            "type": "patterns",
            "value": "Email",
            "patterns": [
              "\\b(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\b"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_2528",
        "values": [
          {
            "type": "patterns",
            "value": "Regular_expression",
            "patterns": [
              "\"^(?:.*[a-z])(?:.*[A-Z])(?:.*\\d)(?:.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\""
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-time",
        "values": []
      },
      {
        "entity": "entity_26237",
        "values": [
          {
            "type": "synonyms",
            "value": "previous",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "next",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "new search",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "done",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-percentage",
        "values": []
      },
      {
        "entity": "sys-date",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      },
      "skill": {
        "counts": {
          "actions": 6,
          "intents": 3,
          "entities": 16,
          "data_types": 0,
          "collections": 0,
          "global_variables": 18
        }
      }
    },
    "variables": [
      {
        "title": "foodItems",
        "variable": "foodItems",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "IMAGE_URL",
        "variable": "IMAGE_URL",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "USED_INGREDIENTS",
        "variable": "INGREDIENTS_LIST",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "MISSED_INGREDIENTS",
        "variable": "MISSED_INGREDIENTS",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "missedIngredients",
        "variable": "missedIngredients",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "NUM_RECIPES",
        "variable": "NUM_RECIPES",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "numRecipes",
        "variable": "numRecipes",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "READABLE_RECIPE_INDEX",
        "variable": "READABLE_RECIPE_INDEX",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "readableRecipeIndex",
        "variable": "readableRecipeIndex",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 1
        }
      },
      {
        "title": "recipeImgUrl",
        "variable": "recipeImgUrl",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "RECIPE_INDEX",
        "variable": "RECIPE_INDEX",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "recipeIndex",
        "variable": "recipeIndex",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 0
        }
      },
      {
        "title": "RECIPE_TITLE",
        "variable": "RECIPE_TITLE",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "recipeTitle",
        "variable": "recipeTitle",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "spoontacular food items",
        "variable": "spoontacular_food_items",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "UNUSED_INGREDIENTS",
        "variable": "UNUSED_INGREDIENTS",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "unusedIngredients",
        "variable": "unusedIngredients",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "usedIngredients",
        "variable": "usedIngredients",
        "data_type": "any",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false,
    "language": "en"
  },
  "description": "created for assistant fa4c12cb-95da-405d-b38f-f4668e2dee23",
  "dialog_settings": {
    "source_assistant": "605f928c-9083-48ed-b181-c7a99a05efbc"
  },
  "created": "2023-09-08T21:59:37.901Z",
  "updated": "2023-09-08T21:59:37.901Z",
  "snapshot": "32",
  "assistant_id": "fa4c12cb-95da-405d-b38f-f4668e2dee23",
  "assistant_references": [
    {
      "name": "Recipe Bot",
      "assistant_id": "605f928c-9083-48ed-b181-c7a99a05efbc",
      "skill_reference": "actions skill"
    }
  ]
}